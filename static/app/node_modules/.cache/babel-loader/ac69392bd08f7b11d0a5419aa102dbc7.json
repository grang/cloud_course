{"remainingRequest":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/thread-loader/dist/cjs.js!/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/babel-loader/lib/index.js!/Users/guohuang/Desktop/workspace/yuwen/static/app/src/fetch/http.js","dependencies":[{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/src/fetch/http.js","mtime":1599533116701},{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/cache-loader/dist/cjs.js","mtime":1599487559871},{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/thread-loader/dist/cjs.js","mtime":1591927127878},{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/babel-loader/lib/index.js","mtime":1591927127910}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport qs from 'qs';\nimport store from '@/store/index.js';\nimport * as types from '@/store/mutation-types';\nimport router from '@/router'; // axios 配置\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers['Content-Type'] = 'application/x-www-form-urlencoded'; //'X-CSRFToken':mos.getToken()\n\naxios.defaults.timeout = 5000;\naxios.defaults.baseURL = ''; // http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  var regex = /.*csrftoken=([^;.]*).*$/; // 用于从cookie中匹配 csrftoken值\n\n  config.headers['X-CSRFToken'] = document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1];\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.response == 'NoLogin') {\n    store.commit(types.LOGOUT);\n\n    if (router.currentRoute.path != '/login') {\n      router.replace({\n        path: '/login',\n        query: {}\n      });\n      return;\n    }\n  }\n\n  return response;\n}, function (error) {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 401 清除token信息并跳转到登录页面\n        store.commit(types.LOGOUT);\n        router.replace({\n          path: '/login',\n          query: {\n            redirect: router.currentRoute.fullPath\n          }\n        });\n    }\n  }\n\n  return Promise.reject(error.response.data);\n}); //export default axios;\n//封装axios的post请求\n\nfunction _get(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      if (response) {\n        resolve(response.data);\n      }\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //封装axios的post请求\n\n\nexport { _get as get };\n\nfunction _post(url, params) {\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    } //params = $.param(params)\n\n\n    params = qs.stringify(params);\n    axios.post(url, params).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //封装axios的post请求\n\n\nexport { _post as post };\n\nfunction _postJson(url, params) {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    }\n\n    axios.post(url, params, {\n      headers: headers\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nexport { _postJson as postJson };\n\nfunction _postUpload(url, params) {\n  var headers = {\n    'Content-Type': 'multipart/form-data'\n  };\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    }\n\n    axios.post(url, params, {\n      headers: headers\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nexport { _postUpload as postUpload };\nexport default {\n  get: function get(url, params) {\n    return _get(url, params);\n  },\n  post: function post(url, params) {\n    return _post(url, params);\n  },\n  postJson: function postJson(url, params) {\n    return _postJson(url, params);\n  },\n  postUpload: function postUpload(url, params) {\n    return _postUpload(url, params);\n  },\n  axios: axios\n};",null]}