{"remainingRequest":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/babel-loader/lib/index.js!/Users/guohuang/Desktop/workspace/yuwen/static/app/src/fetch/http.js","dependencies":[{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/src/fetch/http.js","mtime":1600525497853},{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/cache-loader/dist/cjs.js","mtime":1599487559871},{"path":"/Users/guohuang/Desktop/workspace/yuwen/static/app/node_modules/babel-loader/lib/index.js","mtime":1591927127910}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport qs from 'qs';\nimport store from '@/store/index.js';\nimport * as types from '@/store/mutation-types';\nimport router from '@/router'; // axios 配置\n\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers['Content-Type'] = 'application/x-www-form-urlencoded'; //'X-CSRFToken':mos.getToken()\n\naxios.defaults.timeout = 5000; // axios.defaults.baseURL = '';\n\naxios.defaults.baseURL = '/classware'; // http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  var regex = /.*csrftoken=([^;.]*).*$/; // 用于从cookie中匹配 csrftoken值\n\n  config.headers['X-CSRFToken'] = document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1];\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.response == 'NoLogin') {\n    store.commit(types.LOGOUT);\n\n    if (router.currentRoute.path != '/login') {\n      router.replace({\n        path: '/login',\n        query: {}\n      });\n      return;\n    }\n  }\n\n  return response;\n}, function (error) {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 401 清除token信息并跳转到登录页面\n        store.commit(types.LOGOUT);\n        router.replace({\n          path: '/login',\n          query: {\n            redirect: router.currentRoute.fullPath\n          }\n        });\n    }\n  }\n\n  return Promise.reject(error.response.data);\n}); //export default axios;\n//封装axios的post请求\n\nfunction _get(url, params) {\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      if (response) {\n        resolve(response.data);\n      }\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //封装axios的post请求\n\n\nexport { _get as get };\n\nfunction _post(url, params) {\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    } //params = $.param(params)\n\n\n    params = qs.stringify(params);\n    axios.post(url, params).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n} //封装axios的post请求\n\n\nexport { _post as post };\n\nfunction _postJson(url, params) {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    }\n\n    axios.post(url, params, {\n      headers: headers\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nexport { _postJson as postJson };\n\nfunction _postUpload(url, params) {\n  var headers = {\n    'Content-Type': 'multipart/form-data'\n  };\n  return new Promise(function (resolve, reject) {\n    if (!params) {\n      params = {};\n    }\n\n    axios.post(url, params, {\n      headers: headers\n    }).then(function (response) {\n      resolve(response.data);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\n\nexport { _postUpload as postUpload };\nexport default {\n  get: function get(url, params) {\n    return _get(url, params);\n  },\n  post: function post(url, params) {\n    return _post(url, params);\n  },\n  postJson: function postJson(url, params) {\n    return _postJson(url, params);\n  },\n  postUpload: function postUpload(url, params) {\n    return _postUpload(url, params);\n  },\n  axios: axios\n};",{"version":3,"sources":["/Users/guohuang/Desktop/workspace/yuwen/static/app/src/fetch/http.js"],"names":["Vue","axios","qs","store","types","router","defaults","headers","common","timeout","baseURL","interceptors","request","use","config","regex","document","cookie","match","err","Promise","reject","response","data","commit","LOGOUT","currentRoute","path","replace","query","error","status","redirect","fullPath","get","url","params","resolve","then","catch","post","stringify","postJson","postUpload"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport axios from 'axios'\nimport qs from 'qs';\n\nimport store from '@/store/index.js'\nimport * as types from '@/store/mutation-types'\nimport router from '@/router'\n\n// axios 配置\naxios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\naxios.defaults.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\n//'X-CSRFToken':mos.getToken()\n\naxios.defaults.timeout = 5000;\n// axios.defaults.baseURL = '';\naxios.defaults.baseURL = '/classware';\n\n\n// http request 拦截器\naxios.interceptors.request.use(\n    config => {\n        let regex = /.*csrftoken=([^;.]*).*$/; // 用于从cookie中匹配 csrftoken值\n\t  \tconfig.headers['X-CSRFToken'] = document.cookie.match(regex) === null ? null : document.cookie.match(regex)[1];\n        return config;\n    },\n    err => {\n        return Promise.reject(err);\n    });\n\n// http response 拦截器\naxios.interceptors.response.use(\n    response => {\n    \tif(response.data.response=='NoLogin'){\n    \t\tstore.commit(types.LOGOUT);\n    \t\t\n    \t\tif(router.currentRoute.path!='/login'){\n    \t\t\trouter.replace({\n                    path: '/login',\n                    query: {}\n                })\n        \t\treturn\n    \t\t}\n    \t\t\n    \t\t\n    \t}\n        return response;\n    },\n    error => {\n        if (error.response) {\n            switch (error.response.status) {\n                case 401:\n                    // 401 清除token信息并跳转到登录页面\n                \tstore.commit(types.LOGOUT);\n    \t\t\t\trouter.replace({\n    \t                path: '/login',\n    \t                query: {redirect: router.currentRoute.fullPath}\n    \t            })\n            }\n        }\n        return Promise.reject(error.response.data)\n    });\n\n//export default axios;\n\n\n//封装axios的post请求\nexport function get(url, params) {\n\treturn new Promise((resolve, reject) => {\n\t    axios.get(url, {params: params}).then(response => {\n\t    \tif(response){\n\t    \t\tresolve(response.data);\n\t    \t}\n\t\t}).catch((error) => {\n\t\t\treject(error);\n\t\t})\n\t})\n}\n\n//封装axios的post请求\nexport function post(url, params) {\n\treturn new Promise((resolve, reject) => {\n\t\tif(!params){\n\t\t\tparams = {};\n\t\t}\n\n\t\t//params = $.param(params)\n\t\tparams = qs.stringify(params)\n\t\taxios.post(url, params).then(response => {\n\t\t\tresolve(response.data);\n\t\t}).catch((error) => {\n\t\t\treject(error);\n\t\t})\n\t})\n}\n\n//封装axios的post请求\nexport function postJson(url, params) {\n\tvar headers = {\"Content-Type\": \"application/json\"}\n\t\n\treturn new Promise((resolve, reject) => {\n\t\tif(!params){\n\t\t\tparams = {};\n\t\t}\n\t\t\n\t\taxios.post(url, params, {headers: headers}).then(response => {\n\t\t\tresolve(response.data);\n\t\t}).catch((error) => {\n\t\t\treject(error);\n\t\t})\n\t})\n}\n\nexport function postUpload(url, params) {\n\tvar headers = {'Content-Type':'multipart/form-data'}\n\t\n\treturn new Promise((resolve, reject) => {\n\t\tif(!params){\n\t\t\tparams = {};\n\t\t}\n\t\t\n\t\taxios.post(url, params, {headers: headers}).then(response => {\n\t\t\tresolve(response.data);\n\t\t}).catch((error) => {\n\t\t\treject(error);\n\t\t})\n\t})\n}\n\n\nexport default {\n\tget(url, params) {\n\t\treturn get(url, params);\n\t},\n\tpost(url, params) {\n\t\treturn post(url, params);\n\t},\n\tpostJson(url, params) {\n\t\treturn postJson(url, params);\n\t},\n\tpostUpload(url, params) {\n\t\treturn postUpload(url, params);\n\t},\n\taxios\n}\n\n"]}]}